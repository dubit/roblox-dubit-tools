local EnvironmentTool = require(script.Parent)

return function()
	describe("detecting environment", function()
		afterEach(function()
			workspace:SetAttribute("Branch", nil)
		end)

		it("should detect edge for development branch", function()
			workspace:SetAttribute("Branch", "development")
			expect(EnvironmentTool:IsEdge()).to.equal(true)
			expect(EnvironmentTool:IsStable()).to.equal(false)
			expect(EnvironmentTool:IsProduction()).to.equal(false)
			expect(EnvironmentTool:GetEnvironment()).to.equal("Edge")
		end)

		it("should detect edge for develop branch", function()
			workspace:SetAttribute("Branch", "develop")
			expect(EnvironmentTool:IsEdge()).to.equal(true)
			expect(EnvironmentTool:IsStable()).to.equal(false)
			expect(EnvironmentTool:IsProduction()).to.equal(false)
			expect(EnvironmentTool:GetEnvironment()).to.equal("Edge")
		end)

		it("should detect stable for release branches", function()
			workspace:SetAttribute("Branch", "release/0.0.0")
			expect(EnvironmentTool:IsEdge()).to.equal(false)
			expect(EnvironmentTool:IsStable()).to.equal(true)
			expect(EnvironmentTool:IsProduction()).to.equal(false)
			expect(EnvironmentTool:GetEnvironment()).to.equal("Stable")
		end)

		it("should detect stable for 'stable' branches", function()
			workspace:SetAttribute("Branch", "stable123")
			expect(EnvironmentTool:IsEdge()).to.equal(false)
			expect(EnvironmentTool:IsStable()).to.equal(true)
			expect(EnvironmentTool:IsProduction()).to.equal(false)
			expect(EnvironmentTool:GetEnvironment()).to.equal("Stable")
		end)

		it("should detect production for master branch", function()
			workspace:SetAttribute("Branch", "master")
			expect(EnvironmentTool:IsEdge()).to.equal(false)
			expect(EnvironmentTool:IsStable()).to.equal(false)
			expect(EnvironmentTool:IsProduction()).to.equal(true)
			expect(EnvironmentTool:GetEnvironment()).to.equal("Production")
		end)

		it("should detect production for main branch", function()
			workspace:SetAttribute("Branch", "main")
			expect(EnvironmentTool:IsEdge()).to.equal(false)
			expect(EnvironmentTool:IsStable()).to.equal(false)
			expect(EnvironmentTool:IsProduction()).to.equal(true)
			expect(EnvironmentTool:GetEnvironment()).to.equal("Production")
		end)

		it("should detect local environments", function()
			workspace:SetAttribute("Branch", "")
			expect(EnvironmentTool:IsEdge()).to.equal(false)
			expect(EnvironmentTool:IsStable()).to.equal(false)
			expect(EnvironmentTool:IsProduction()).to.equal(false)
			expect(EnvironmentTool:GetEnvironment()).to.equal("Local")
		end)

		it("should detect local environments when no attribute is set", function()
			workspace:SetAttribute("Branch", nil)
			expect(EnvironmentTool:IsEdge()).to.equal(false)
			expect(EnvironmentTool:IsStable()).to.equal(false)
			expect(EnvironmentTool:IsProduction()).to.equal(false)
			expect(EnvironmentTool:GetEnvironment()).to.equal("Local")
		end)

		it("should detect local environments when attribute is unknown", function()
			workspace:SetAttribute("Branch", "abcdefg")
			expect(EnvironmentTool:IsEdge()).to.equal(false)
			expect(EnvironmentTool:IsStable()).to.equal(false)
			expect(EnvironmentTool:IsProduction()).to.equal(false)
			expect(EnvironmentTool:GetEnvironment()).to.equal("Local")
		end)
	end)
end
